<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>apigee</groupId>
	<artifactId>pingstatus-v1</artifactId>
	<version>-</version>
	<name>pingstatus-${deployment.suffix}v1</name>
	<packaging>pom</packaging>

	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>Maven Plugin Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<org.slf4j.simpleLogger.defaultLogLevel>info</org.slf4j.simpleLogger.defaultLogLevel>
		<project.root.dir>${basedir}</project.root.dir>
		<target.root.dir>${basedir}/target</target.root.dir>
		<deployment.suffix>${user.name}</deployment.suffix>
		<commit>none</commit>
		<branch>local</branch>
	</properties>

	<!-- This is where you add environment specific properties under various profile names 
		 For apigee.options, refer to "Advanced Configuration Options" under https://github.com/apigee/apigee-deploy-maven-plugin#pom-xml-sample 
	-->
	<profiles>
		<profile>
			<id>hybrid-test</id>
			<properties>
				<apigee.profile>hybrid-test</apigee.profile>
				<apigee.hosturl>https://apigee.googleapis.com</apigee.hosturl>
				<apigee.org>${EdgeOrg}</apigee.org>
				<apigee.env>${EdgeEnv}</apigee.env>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.username>${EdgeUsername}</apigee.username>
				<apigee.password>${EdgePassword}</apigee.password>
				<apigee.authtype>oauth</apigee.authtype>
				<apigee.bearer>${EdgeBearer}</apigee.bearer>
				<api.northbound.domain>${EdgeNorthboundDomain}</api.northbound.domain>
				<api.testtag>@errorHandling,@health,@wip,@mock</api.testtag>
				<apigee.options>validate</apigee.options>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<!-- Uses properties from $HOME/.m2/settings.xml or environment variables via set-edge-env-values used in Jenkins -->
			<!-- Jenkins command:
				install -P${EdgeProfile} -Ddeployment.suffix=${EdgeDeploySuffix} -Dapigee.org=${EdgeOrg} -Dapigee.env=${EdgeEnv} -Dapi.northbound.domain=${EdgeNorthboundDomain} -Dapigee.username=${EdgeInstallUsername} -Dapigee.password=${EdgeInstallPassword} -Dapigee.config.options=update -Dapigee.config.dir=target/resources/edge -Dapigee.config.exportDir=target/test/integration -Dcommit=${GIT_COMMIT} -Dbranch=${GIT_BRANCH}
			-->
			<properties>
				<apigee.profile>test</apigee.profile>
				<apigee.env>${EdgeEnv}</apigee.env>
				<apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.org>${EdgeOrg}</apigee.org>
				<apigee.username>${EdgeUsername}</apigee.username>
				<apigee.password>${EdgePassword}</apigee.password>
				<apigee.authtype>oauth</apigee.authtype>
				<apigee.bearer>${EdgeBearer}</apigee.bearer>
				<api.northbound.domain>${EdgeNorthboundDomain}</api.northbound.domain>
				<api.testtag>@errorHandling,@health,@cors,@wip</api.testtag>
				<apigee.options>validate</apigee.options>

				<portal.url>https://dev-amer-demo13.pantheonsite.io</portal.url><!-- URL of the developer portal. -->
                <portal.username>${PortalUsername}</portal.username><!-- Username for the developer portal. -->
                <portal.password>${PortalPassword}</portal.password><!-- Password for the developer portal. -->
                <portal.format>yaml</portal.format><!-- Format of the OpenAPI specs. json|yaml -->
                <portal.api.doc.format>basic_html</portal.api.doc.format><!-- Format in the portal. Values: basic_html, restricted_html, full_html -->
                <portal.directory>./oas</portal.directory> <!-- Directory where OpenAPI specs are accessible. Using ./specs for sample -->
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<!-- Uses properties from $HOME/.m2/settings.xml or environment variables via set-edge-env-values used in Jenkins -->
			<!-- Jenkins command:
				install -P${EdgeProfile} -Ddeployment.suffix=${EdgeDeploySuffix} -Dapigee.org=${EdgeOrg} -Dapigee.env=${EdgeEnv} -Dapi.northbound.domain=${EdgeNorthboundDomain} -Dapigee.username=${EdgeInstallUsername} -Dapigee.password=${EdgeInstallPassword} -Dapigee.config.options=update -Dapigee.config.dir=target/resources/edge -Dapigee.config.exportDir=target/test/integration -Dcommit=${GIT_COMMIT} -Dbranch=${GIT_BRANCH}
			-->
			<properties>
				<apigee.profile>prod</apigee.profile>
				<apigee.env>${EdgeEnv}</apigee.env>
				<apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.org>${EdgeOrg}</apigee.org>
				<apigee.username>${EdgeUsername}</apigee.username>
				<apigee.password>${EdgePassword}</apigee.password>
				<api.northbound.domain>${EdgeNorthboundDomain}</api.northbound.domain>
				<api.testtag>@health</api.testtag>
				<apigee.options>validate,override</apigee.options>
				<apigee.override.delay>5</apigee.override.delay>
			</properties>
		</profile>
		<profile>
			<id>amer-demo13-test</id>
			<!-- Uses properties from $HOME/.m2/settings.xml or environment variables via set-edge-env-values used in Jenkins -->
			<properties>
				<apigee.profile>amer-demo13-test</apigee.profile>
				<apigee.env>${EdgeEnv}</apigee.env>
				<apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.org>${EdgeOrg}</apigee.org>
				<apigee.username>${EdgeUsername}</apigee.username>
				<apigee.password>${EdgePassword}</apigee.password>
				<api.northbound.domain>${EdgeNorthboundDomain}</api.northbound.domain>
				<api.testtag>@errorHandling,@health,@wip,@mock</api.testtag>
			</properties>
		</profile>
		<profile>
			<id>amer-demo13-prod</id>
			<!-- Uses properties from $HOME/.m2/settings.xml or environment variables via set-edge-env-values used in Jenkins -->
			<properties>
				<apigee.profile>amer-demo13-prod</apigee.profile>
				<apigee.env>${EdgeEnv}</apigee.env>
				<apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.org>${EdgeOrg}</apigee.org>
				<apigee.username>${EdgeUsername}</apigee.username>
				<apigee.password>${EdgePassword}</apigee.password>
				<api.northbound.domain>${EdgeNorthboundDomain}</api.northbound.domain>
				<api.testtag>@errorHandling,@health,@wip,@mock</api.testtag>
				<apigee.options>override</apigee.options>
				<apigee.override.delay>5</apigee.override.delay>
			</properties>
		</profile>
		<profile>
			<id>demo29-test</id>
			<!-- Uses properties from $HOME/.m2/settings.xml or environment variables via set-edge-env-values used in Jenkins -->
			<properties>
				<apigee.profile>demo29-test</apigee.profile>
				<apigee.env>${EdgeEnv}</apigee.env>
				<apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.org>${EdgeOrg}</apigee.org>
				<apigee.username>${EdgeUsername}</apigee.username>
				<apigee.password>${EdgePassword}</apigee.password>
				<api.northbound.domain>${EdgeNorthboundDomain}</api.northbound.domain>
				<api.testtag>@errorHandling,@health,@wip,@mock</api.testtag>
			</properties>
		</profile>
		<profile>
			<id>demo29-prod</id>
			<!-- Uses properties from $HOME/.m2/settings.xml or environment variables via set-edge-env-values used in Jenkins -->
			<properties>
				<apigee.profile>demo29-prod</apigee.profile>
				<apigee.env>${EdgeEnv}</apigee.env>
				<apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.org>${EdgeOrg}</apigee.org>
				<apigee.username>${EdgeUsername}</apigee.username>
				<apigee.password>${EdgePassword}</apigee.password>
				<api.northbound.domain>${EdgeNorthboundDomain}</api.northbound.domain>
				<api.testtag>@errorHandling,@health,@wip,@mock</api.testtag>
				<apigee.options>override</apigee.options>
				<apigee.override.delay>5</apigee.override.delay>
			</properties>
		</profile>
		<profile>
			<id>training-test</id>
			<properties>
				<apigee.profile>training-test</apigee.profile>
				<apigee.env>test</apigee.env>
				<apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.org>kurtkanaskietrainer-trial</apigee.org>
				<apigee.username>${env.APIGEE_USERNAME}</apigee.username>
				<apigee.password>${env.APIGEE_PASSWORD}</apigee.password>
				<api.northbound.domain>kurtkanaskietrainer-trial-test.apigee.net</api.northbound.domain>
				<api.testtag>@errorHandling,@health,@wip,@mock</api.testtag>
			</properties>
		</profile>
		<profile>
			<id>training-prod</id>
			<properties>
				<apigee.profile>training-prod</apigee.profile>
				<apigee.env>prod</apigee.env>
				<apigee.hosturl>https://api.enterprise.apigee.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.org>kurtkanaskietrainer-trial</apigee.org>
				<apigee.username>${env.APIGEE_USERNAME}</apigee.username>
				<apigee.password>${env.APIGEE_PASSWORD}</apigee.password>
				<api.northbound.domain>kurtkanaskietrainer-trial-prod.apigee.net</api.northbound.domain>
				<api.testtag>@health</api.testtag>
				<apigee.options>override</apigee.options>
				<apigee.override.delay>5</apigee.override.delay>
			</properties>
		</profile>
		<profile>
			<id>local-aio-test</id>
			<properties>
				<apigee.profile>local-aio-test</apigee.profile>
				<apigee.env>test</apigee.env>
				<apigee.hosturl>http://localhost:8080</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.org>trial</apigee.org>
				<apigee.username>${env.APIGEE_USERNAME}</apigee.username>
				<apigee.password>${env.APIGEE_PASSWORD}</apigee.password>
				<api.northbound.domain>localhost:9001</api.northbound.domain>
				<api.testtag>~@errorHandling,~@health,~@wip,~@mock</api.testtag>
			</properties>
		</profile>
		<profile>
			<id>gcp-test</id>
			<properties>
				<apigee.profile>gcp-test</apigee.profile>
				<apigee.env>test</apigee.env>
				<apigee.hosturl>http://35.243.181.209:8080</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.org>aio</apigee.org>
				<apigee.username>${env.APIGEE_USERNAME}</apigee.username>
				<apigee.password>${env.APIGEE_PASSWORD}</apigee.password>
				<api.northbound.domain>35.243.181.209:9001</api.northbound.domain>
				<api.testtag>~@errorHandling,~@health,~@wip,~@mock</api.testtag>
			</properties>
		</profile>
		<profile>
			<id>gcp-prod</id>
			<properties>
				<apigee.profile>gcp-prod</apigee.profile>
				<apigee.env>prod</apigee.env>
				<apigee.hosturl>http://35.243.181.209:8080</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.org>edge-aio</apigee.org>
				<apigee.username>${env.APIGEE_USERNAME}</apigee.username>
				<apigee.password>${env.APIGEE_PASSWORD}</apigee.password>
				<api.northbound.domain>35.243.181.209:9001</api.northbound.domain>
				<api.testtag>~@errorHandling,~@health</api.testtag>
			</properties>
		</profile>
	</profiles>

	<build>
		<!--
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.apigee.build-tools.enterprise4g</groupId>
					<artifactId>apigee-edge-maven-plugin</artifactId>
					<version>1.0.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
		-->

		<plugins>
			<!-- run jslint -->
			<plugin>
				<groupId>com.cj.jshintmojo</groupId>
				<artifactId>jshint-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>jslint</id>
						<phase>validate</phase>
						<goals>
							<goal>lint</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<options>curly,eqeqeq,forin,latedef,undef,noempty,nonew,unused</options>
					<directories>
						<directory>apiproxy/resources/jsc</directory>
					</directories>
					<reporter>jslint</reporter>
				</configuration>
			</plugin>

			<!-- copy the full apiproxy folder to target folder -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<!--source -->
									<directory>${project.root.dir}</directory>
									<filtering>true</filtering>
									<includes>
										<include>resources/**</include>
										<include>apiproxy/**</include>
										<include>test/integration/**</include>
										<include>test/performance/**</include>
									</includes>
								</resource>
							</resources>
							<!--target -->
							<outputDirectory>${target.root.dir}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Do replacements -->
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.2</version>
				<executions>
					<execution>
						<id>replace</id>
						<phase>process-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<basedir>${target.root.dir}</basedir>
					<includes>
						<include>apiproxy/pingstatus-v1.xml</include>
						<include>apiproxy/proxies/default.xml</include>
						<include>test/integration/test-config.json</include>
						<include>resources/edge/env/*/targetServers.json</include>
						<include>resources/edge/org/apiProducts.json</include>
						<include>resources/edge/org/developerApps.json</include>
						<include>resources/edge/org/developers.json</include>
					</includes>
					<replacements>
						<replacement>
							<token>/pingstatus/v1</token>
							<value>/pingstatus/${deployment.suffix}v1</value>
						</replacement>
						<replacement>
							<token>pingstatus-v1</token>
							<value>pingstatus-${deployment.suffix}v1</value>
						</replacement>
						<replacement>
							<token>API_NORTHBOUND_DOMAIN</token>
							<value>${api.northbound.domain}</value>
						</replacement>
						<replacement>
							<token>@DESCRIPTION</token>
							<value>commit ${commit} from ${branch} branch by ${apigee.username}</value>
						</replacement>
						<replacement>
							<token>APIGEE_ENVIRONMENT</token>
							<value>${apigee.env}</value>
						</replacement>
					</replacements>
				</configuration>
			</plugin>

			<!-- apigee deploy -->
			<plugin>
				<groupId>io.apigee.build-tools.enterprise4g</groupId>
				<artifactId>apigee-edge-maven-plugin</artifactId>
				<version>1.1.6</version>
				<executions>
					<execution>
						<id>configure-bundle-step</id>
						<phase>package</phase>
						<goals>
							<goal>configure</goal>
						</goals>
					</execution>
					<!--deploy bundle -->
					<execution>
						<id>deploy-bundle-step</id>
						<phase>install</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- apigee Configuration -->
			<plugin>
				<groupId>com.apigee.edge.config</groupId>
				<artifactId>apigee-config-maven-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<execution>
						<id>create-config-cache</id>
						<phase>verify</phase>
						<goals>
							<goal>caches</goal>
						</goals>
					</execution>
					<execution>
						<id>create-config-targetserver</id>
						<phase>verify</phase>
						<goals>
							<goal>targetservers</goal>
						</goals>
					</execution>
					<execution>
						<id>create-config-kvm</id>
						<phase>verify</phase>
						<goals>
							<goal>keyvaluemaps</goal>
						</goals>
					</execution>
					<execution>
						<id>create-config-apiproduct</id>
						<phase>install</phase>
						<goals>
							<goal>apiproducts</goal>
						</goals>
					</execution>
					<execution>
						<id>create-config-developer</id>
						<phase>install</phase>
						<goals>
							<goal>developers</goal>
						</goals>
					</execution>
					<execution>
						<id>create-config-app</id>
						<phase>install</phase>
						<configuration>
							<skip>${skip.apps}</skip>
						</configuration>
						<goals>
							<goal>apps</goal>
						</goals>
					</execution>
					<execution>
						<id>export-config-app</id>
						<phase>install</phase>
						<configuration>
							<skip>${skip.export}</skip>
						</configuration>
						<goals>
							<goal>exportAppKeys</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.8.0</version>
				<!-- NOTE:
					put the node executable in targetnode, 
					otherwise it defaults to node and 
					deploy plugin thinks its a node.js proxy 
				-->
				<configuration>
					<installDirectory>targetnode</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<phase>validate</phase>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v8.4.0</nodeVersion>
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<phase>validate</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>apigeelint</id>
						<phase>validate</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run apigeelint</arguments>
						</configuration>
					</execution>
					<execution>
						<id>unit</id>
						<phase>validate</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run unit</arguments>
						</configuration>
					</execution>
					<execution>
						<id>integration</id>
						<phase>install</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run integration -- --tags ${api.testtag}</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- apigee API Specs -->
			<plugin>
                <groupId>com.apigee.smartdocs.config</groupId>
                <artifactId>apigee-smartdocs-maven-plugin</artifactId>
                <version>2.0.0</version>
                <executions>
                    <execution>
                        <id>smartdocs-deploy</id>
                        <phase>install</phase>
                        <goals>
                            <goal>apidoc</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

			<!-- run performance tests -->
			<!--
			<plugin>
				<groupId>com.lazerycode.jmeter</groupId>
				<artifactId>jmeter-maven-plugin</artifactId>
				<version>2.2.0</version>
				<executions>
					<execution>
					<id>jmeter-tests</id>
					<phase>install</phase>
					<goals>
						<goal>jmeter</goal>
					</goals>
					<configuration>
						<skipTests>${skipPerformanceTests}</skipTests>
						<ignoreResultFailures>true</ignoreResultFailures>
						<suppressJMeterOutput>false</suppressJMeterOutput>
						<propertiesUser>
						<testData>testdata.csv</testData>
						<threadNum>10</threadNum>
						<rampUpPeriodSecs>2</rampUpPeriodSecs>
						<loopCount>10</loopCount>
						</propertiesUser>
					</configuration>
					</execution>
				</executions>
				<configuration>
					<testFilesDirectory>target/test/performance</testFilesDirectory>
					<testResultsTimestamp>false</testResultsTimestamp>
					<resultsDirectory>${project.root.dir}/results/performance</resultsDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.lazerycode.jmeter</groupId>
				<artifactId>jmeter-analysis-maven-plugin</artifactId>
				<version>1.0.6</version>
				<executions>
					<execution>
					<id>jmeter-analysis</id>
								<phase>install</phase>
					<goals>
						<goal>analyze</goal>
					</goals>
					</execution>
				</executions>
				<configuration>
					<sourceDirFailed>false</sourceDirFailed>
					<source>${project.root.dir}/results/performance/*</source>
							<targetDirectory>${project.root.dir}/results/performance/reports</targetDirectory>
				</configuration>
			</plugin>
			-->
			<!-- cleaning dirs -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<skip>${skip.clean}</skip>
				</configuration>
				<executions>
					<!-- Don't clean on init for iteration on tests -->
					<execution>
						<id>auto-clean-init</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
					<!-- leave the target dir for debugging, post mortem -->
					<execution>
						<id>auto-clean-install</id>
						<phase>install</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
