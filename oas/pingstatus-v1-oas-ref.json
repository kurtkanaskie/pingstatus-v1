{
    "swagger": "2.0",
    "info": {
        "description": "Ping Status",
        "version": "1.0.0",
        "title": "pingstatus-v1",
        "contact": {
            "email": "kurtkanaskie@google.com"
        }
    },
    "host": "kurtkanaskietrainer-trial-test.apigee.net",
    "schemes": [
        "https"
    ],
    "basePath": "/pingstatus/v1",
    "parameters": {
        "x-apikey": {
          "in": "header",
          "name": "X-APIKey",
          "description": "API Key also known as client_id.",
          "required": true,
          "type": "string",
          "default": "jbibSZW712N5qqjaWMpAD3HM9eMeclMg"
        }
    },
    "paths": {
        "/ping": {
            "get": {
                "operationId": "getPing",
                "description": "Returns a message indicating the API proxy is operational",
                "consumes": [],
                "produces": [ "application/json" ],
                "parameters": [
                    {"$ref": "#/parameters/x-apikey" }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/PingResponse" } },
                    "400": { "description": "Bad Request" },
                    "401": { "description": "Unauthorized" }
                },
                "deprecated": false
            }
        },
        "/status": {
            "get": {
                "operationId": "getStatus",
                "description": "Returns a message indicating the API proxy and back end is operational",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {"$ref": "#/parameters/x-apikey" }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/StatusResponse" } },
                    "400": { "description": "Bad Request" },
                    "401": { "description": "Unauthorized" }
                }
            }
        }
    },
    "definitions": {
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "code": { "description": "Error code", "type": "string", "default":"400.000" },
                "message": { "description": "Error message", "type": "string" },
                "info": { "description": "Where to find more inforamation", "type": "string" },
                "detail": { "description": "Detail error information", "type": "string" }
            }
        },
        "PingResponse": {
            "type": "object",
            "properties": {
                "environment": { "default":"test", "description": "The name of the environment", "type": "string" },
                "apiproxy": { "default":"pingstatus-v1", "description": "The name of the API Proxy", "type": "string" },
                "client": { "default":"1234567890", "description": "The IP address of the client calling the API", "type": "string" },
                "time": { "default":42, "description": "The time when the request was processed", "type": "string" },
                "latency": { "default":42, "description": "The total response time to process the API request", "type": "string" },
                "message": { "default":"PONG", "description": "Message from the endpoint, gaurenteed to be PONG", "type": "string" }
            }
        },
        "StatusResponse": {
            "type": "object",
            "properties": {
                "environment": { "description": "The name of the environment", "type": "string" },
                "apiproxy": { "description": "The name of the API Proxy", "type": "string" },
                "client": { "description": "The IP address of the client calling the API", "type": "string" },
                "time": { "description": "The time when the request was processed", "type": "string" },
                "proxyLatency": { "description": "The time in milli-seconds for the front end to process the API request", "type": "string" },
                "targetLatency": { "description": "The time in milli-seconds for the back end to process the API request", "type": "string" },
                "latency": { "description": "The total response time to process the API request", "type": "string" },
                "message": { "description": "Message from the endpoint, gaurenteed to be STATUS", "type": "string" },
                "backendMessage": { "description": "Message recieved from the back end typically including an non-descript tag and date information", "type": "string" },
                "merchantId": { "description": "The Merchant Identifier provided in the request header", "type": "string" }
            }
        }
    }
}
